{
  "1": {
    "testNumber": 1,
    "title": "includeSubdomains Attribute in HSTS Headers",
    "description": "How is the 'includeSubdomains' attribute interpreted in the browser? Does it correctly make the HSTS settings for the calling host itself and its subdomains? Does it also include neighbour hosts or the apex domain?",
    "date_created": "1/17/2019",
    "tagNums": [
      4,
      8
    ],
    "path": "includeSubdomains-in-HSTS",
    "question": "How does the browser interpret the 'includeSubdomains' attribute?",
    "possibleAnswers": [
      {
        "ans_id": 1,
        "ans_desc": "Correctly make the HSTS settings for the host itself and its subdomains"
      },
      {
        "ans_id": 2,
        "ans_desc": "Only make the HSTS settings for the host itself and ignore the 'includeSubdomains' attribute"
      },
      {
        "ans_id": 3,
        "ans_desc": "Make the HSTS settings for the host itself, its subhosts and its neighbour hosts"
      },
      {
        "ans_id": 4,
        "ans_desc": "Make the HSTS settings for the host itself and the apex domain"
      },
      {
        "ans_id": 5,
        "ans_desc": "Make the HSTS settings for the host itself, its subhosts and the apex domain"
      },
      {
        "ans_id": 0,
        "ans_desc": "HSTS is not supported"
      }
    ]
  },
  "2": {
    "testNumber": 2,
    "title": "HSTS Headers via plain http",
    "description": "Does the browser accept an HSTS header when set by a non-HTTPS web site? This should not be the case as it would allow for man-in-the-middle attacks.",
    "date_created": "11/28/2019",
    "tagNums": [
      4
    ],
    "path": "hsts-via-plain-http",
    "question": "Is the HSTS header processed if received via plain http?",
    "possibleAnswers": [
      {
        "ans_id": 1,
        "ans_desc": "No"
      },
      {
        "ans_id": 0,
        "ans_desc": "Yes"
      }
    ]
  },
  "3": {
    "testNumber": 3,
    "title": "Is the header processed if received via https with invalid certificate? Will the invalid certificate be accepted by the next connection?",
    "description": "Approach: Turn off proxy. Visit https://invalidcert.example.mgm  Check if browser chooses https next time. Example: Header ignored, header accepted and enforced upon next session, i.e. after closing tab and browser and accessing the site again.",
    "date_created": "1/17/2019",
    "tagNums": [
      4
    ],
    "path": "HSTS-with-invalid-certificates",
    "question": "",
    "possibleAnswers": [
      {
        "ans_id": 2,
        "ans_desc": "Processed via https with invalid certificate"
      },
      {
        "ans_id": 3,
        "ans_desc": "A plus certificate accepted by the next connection"
      },
      {
        "ans_id": 4,
        "ans_desc": "Header not processed"
      }
    ]
  },
  "6": {
    "testNumber": 6,
    "title": "Contradicting Cookie Headers",
    "description": "Which cookie prevails in case of contradicting cookie headers? The first or the second? Or does the browser even completely ignore the cookie?",
    "date_created": "1/17/2019",
    "tagNums": [
      2,
      7
    ],
    "path": "contradicting-cookie-headers",
    "question": "Which cookie wins?",
    "possibleAnswers": [
      {
        "ans_id": 2,
        "ans_desc": "The first"
      },
      {
        "ans_id": 3,
        "ans_desc": "The second"
      },
      {
        "ans_id": 0,
        "ans_desc": "Neither"
      }
    ]
  },
  "8": {
    "testNumber": 8,
    "title": "Foreign Domain Attribute in Cookie Declaration",
    "description": "What happens if a server sets a cookie that has a foreign domain set in the domain attribute? Is the cookie ignored by the browser?",
    "date_created": "1/17/2019",
    "tagNums": [
      2,
      13
    ],
    "path": "foreign-domains-in-cookies",
    "question": "Is the cookie with the foreign domain attribute ignored?",
    "possibleAnswers": [
      {
        "ans_id": 1,
        "ans_desc": "Yes"
      },
      {
        "ans_id": 0,
        "ans_desc": "No"
      }
    ]
  },
  "9": {
    "testNumber": 9,
    "title": "HttpOnly Handling in JavaScript",
    "description": "What happens if a JS script tries to set a cookie with the httpOnly flag? Does the browser allow this? Does it allow the cookie to be read afterwards?",
    "date_created": "1/17/2019",
    "tagNums": [
      2,
      6
    ],
    "path": "js-setting-httponly-cookies",
    "question": "Can JavaScript set and read httpOnly cookies?",
    "possibleAnswers": [
      {
        "ans_id": 1,
        "ans_desc": "No"
      },
      {
        "ans_id": 10,
        "ans_desc": "Set but not read"
      },
      {
        "ans_id": 0,
        "ans_desc": "Yes"
      }
    ]
  },
  "10": {
    "testNumber": 10,
    "title": "Secure Cookie set by HTTP Web Site",
    "description": "What happens if a web site accessed via HTTP tries to set a cookie with the secure flag set? Will the browser simply ignore this cookie or will it actually accept the cookie?",
    "date_created": "06/14/2019",
    "tagNums": [
      2,
      10
    ],
    "path": "http-sites-setting-secure-cookies",
    "question": "Can an HTTP web site set secure cookies?",
    "possibleAnswers": [
      {
        "ans_id": 0,
        "ans_desc": "Yes"
      },
      {
        "ans_id": 1,
        "ans_desc": "No"
      },
      {
        "ans_id": 10,
        "ans_desc": "Cookie was set without the secure flag"
      }
    ]
  },
  "11": {
    "testNumber": 11,
    "title": "Secure cookies set via JavaScript by plain HTTP sources",
    "description": "What happens if JavaScript loaded from an HTTP source tries to set a cookie with the attribute \"secure\"?",
    "date_created": "06/11/2019",
    "tagNums": [
      2,
      10
    ],
    "path": "secure-cookies-set-via-JS-from-HTTP-source",
    "question": "Can plain HTTP sources set secure cookies via JavaScript?",
    "possibleAnswers": [
      {
        "ans_id": 1,
        "ans_desc": "No, secure cookie is not set."
      },
      {
        "ans_id": 7,
        "ans_desc": "Yes, secure cookie is set."
      },
      {
        "ans_id": 0,
        "ans_desc": "Error in test execution."
      }
    ]
  },
  "13": {
    "testNumber": 13,
    "title": "Contradicting CSP and X-Frame-Options Headers",
    "description": "Which policy is enforced if both a Content Security Policy and the X-Frame-Options header govern the embedding into other pages? According to the specification, the CSP should take precedence.",
    "date_created": "05/20/2019",
    "tagNums": [
      3,
      1,
      7
    ],
    "path": "CSP-and-X-Frame-Options-working-together",
    "question": "Which header takes precedence?",
    "possibleAnswers": [
      {
        "ans_id": 2,
        "ans_desc": "CSP"
      },
      {
        "ans_id": 3,
        "ans_desc": "X-Frame-Options"
      }
    ]
  },
  "14": {
    "testNumber": 14,
    "title": "Contradicting CSP Declarations",
    "description": "Which Content Security Policy is enforced if there are two contradicting declarations? The first? The second?",
    "date_created": "1/17/2019",
    "tagNums": [
      1,
      7
    ],
    "path": "contradicting-CSP-declarations",
    "question": "Which of the two CSP declarations is enforced?",
    "possibleAnswers": [
      {
        "ans_id": 3,
        "ans_desc": "The first"
      },
      {
        "ans_id": 2,
        "ans_desc": "The second"
      },
      {
        "ans_id": 9,
        "ans_desc": "Error in test execution of the Safari browser, most probably a bug in one of the test components."
      }
    ]
  },
  "15": {
    "testNumber": 15,
    "title": "Frame-src vs. child-src in CSP",
    "description": "When a CSP header contains a frame-src directive, this defines from which sources iframes can be loaded. As fallback, child-src should be used. How does the browsers behave when both frame-src and child-src are defined? Does it follow the frame-src? Or both definitions? Does it block the CSP declaration due to conflicts?",
    "date_created": "08/28/2019",
    "tagNums": [
      1,
      7,
      11,
      12
    ],
    "path": "frame-src-and-child-src-in-CSP",
    "question": "Which of the two CSP declarations is enforced for iframe sources?",
    "possibleAnswers": [
      {
        "ans_id": 1,
        "ans_desc": "frame-src is enforced, child-src is ignored"
      },
      {
        "ans_id": 6,
        "ans_desc": "Both frame-src and child-src can be used"
      },
      {
        "ans_id": 7,
        "ans_desc": "Only child-src is enforced, frame-src is ignored"
      },
      {
        "ans_id": 9,
        "ans_desc": "Both frame-src and child-src are ignored"
      }
    ]
  },
  "16": {
    "testNumber": 16,
    "title": "Contradicting X-Frame-Options Headers",
    "description": "Which Policy is enforced if the server sends two contradicting X-Frame-Options headers? Always the first or the last header sent? Or does the most restrictive header (deny) have precedence?",
    "date_created": "10/12/2018",
    "tagNums": [
      3,
      7
    ],
    "path": "contradicting-x-frame-options",
    "question": "Which X-Frame-Options header has precedence?",
    "possibleAnswers": [
      {
        "ans_id": 1,
        "ans_desc": "X-Frame-Options: deny, the most restrictive header"
      },
      {
        "ans_id": 4,
        "ans_desc": "Allow-From headers have precedence"
      },
      {
        "ans_id": 3,
        "ans_desc": "The first header"
      },
      {
        "ans_id": 2,
        "ans_desc": "The last header"
      }
    ]
  },
  "17": {
    "testNumber": 17,
    "title": "Cookie Life Time: max-age vs. expires",
    "description": "The life time of a cookie can be set either via the \"max-age\" or the \"expires\" attribute. What if both methods are used? Which definition is considered by the browser?",
    "date_created": "01/11/2019",
    "tagNums": [
      2,
      7,
      14,
      15
    ],
    "path": "cookies-with-max-age-and-expires-attributes",
    "question": "What if a cookie is set with max-age and expires attributes?",
    "possibleAnswers": [
      {
        "ans_id": 1,
        "ans_desc": "The max-age value wins"
      },
      {
        "ans_id": 2,
        "ans_desc": "The expires value wins"
      },
      {
        "ans_id": 0,
        "ans_desc": "Error in test execution"
      }
    ]
  },
  "20": {
    "testNumber": 20,
    "title": "no-store in Cache-Control Declaration",
    "description": "What effect does the header Cache-Control: no-store have? How does the browser behave if a page which sets this header is visited twice? Is the page requested a second time or is the cached version used?",
    "date_created": "1/17/2019",
    "tagNums": [
      5,
      16,
      17
    ],
    "path": "no-store-in-cache-control",
    "question": "How does the browser behave?",
    "possibleAnswers": [
      {
        "ans_id": 2,
        "ans_desc": "The page is requested a second time"
      },
      {
        "ans_id": 3,
        "ans_desc": "The page is not requested a second time"
      }
    ]
  },
  "21": {
    "testNumber": 21,
    "title": "no-cache, no-store, must-revalidate in Cache-Control Declaration",
    "description": "What effect does the header Cache-Control: no-cache, no-store, must-revalidate have? How does the browser behave if a page which sets this header is visited twice? Is the page requested a second time or is the cached version used?",
    "date_created": "11/28/2019",
    "tagNums": [
      5
    ],
    "path": "no-cache-no-store-must-revalidate-in-cache-control",
    "question": "How does the browser behave?",
    "possibleAnswers": [
      {
        "ans_id": 2,
        "ans_desc": "Page not stored at all / browser sends second request without conditional"
      },
      {
        "ans_id": 3,
        "ans_desc": "Browser does not send second request"
      },
      {
        "ans_id": 4,
        "ans_desc": "Browser sends request with conditional (e.g If-None-Match or If-Modified-Since)"
      }
    ]
  },
  "26": {
    "testNumber": 26,
    "title": "must-revalidate in Cache-Control Declarations?",
    "description": "What effect does Cache-Control: must-revalidate have?",
    "date_created": "1/17/2019",
    "tagNums": [
      5
    ],
    "path": "cache-control-must-revalidate",
    "question": "What can be observed?",
    "possibleAnswers": [
      {
        "ans_id": 2,
        "ans_desc": "Page not stored at all / browser sends second request without conditional"
      },
      {
        "ans_id": 3,
        "ans_desc": "Browser does not send second request"
      },
      {
        "ans_id": 4,
        "ans_desc": "Browser sends request with conditional (e.g If-None-Match or If-Modified-Since)"
      }
    ]
  },
  "27": {
    "testNumber": 27,
    "title": "Browser behavior for X-XSS-Protection mode block",
    "description": "How does the browser behave when the server sets the X-XSS-Protection header with the value '1; mode=block' in case of a simple reflected XSS attack? Is the browser able to detect the attack and will the rendering of the entire page be blocked or only the reflected component?",
    "date_created": "06/11/2019",
    "tagNums": [
      18
    ],
    "path": "x-xss-protection-mode-block",
    "question": "How does the browser behave if the server sets the X-XSS-Protection header to '1; mode=block'?",
    "possibleAnswers": [
      {
        "ans_id": 1,
        "ans_desc": "The XSS is exploited, no XSS protection is active"
      },
      {
        "ans_id": 6,
        "ans_desc": "The XSS attack is prevented by blocking the entire page"
      },
      {
        "ans_id": 5,
        "ans_desc": "The XSS attack is prevented by filtering and the page rendered"
      }
    ]
  },
  "28": {
    "testNumber": 28,
    "title": "Browser default behavior for X-XSS-Protection",
    "description": "If the server does not set the X-XSS-Protection header, the browser uses a default. Does the browser detect reflected XSS with the default XSS protection and how does it react?",
    "date_created": "06/11/2019",
    "tagNums": [
      18
    ],
    "path": "x-xss-protection-default-behavior",
    "question": "What can be observed?",
    "possibleAnswers": [
      {
        "ans_id": 1,
        "ans_desc": "The XSS is exploited, no XSS protection is active"
      },
      {
        "ans_id": 5,
        "ans_desc": "The XSS attack is prevented by filtering and the page rendered"
      },
      {
        "ans_id": 6,
        "ans_desc": "The XSS attack is prevented by blocking the entire page"
      }
    ]
  },
  "29": {
    "testNumber": 29,
    "title": "Browser behavior for X-XSS-Protection with value '1'",
    "description": "How does the browser behave when the server sets the X-XSS-Protection header with the value '1' in case of a simple reflected XSS attack? Is the browser able to detect the attack and will the rendering of the entire page be blocked or only the reflected component?",
    "date_created": "03/12/2019",
    "tagNums": [
      18
    ],
    "path": "x-xss-protection-1",
    "question": "How does the browser behave if the server sets the X-XSS-Protection header to '1'?",
    "possibleAnswers": [
      {
        "ans_id": 1,
        "ans_desc": "The XSS is exploited, no XSS protection is active"
      },
      {
        "ans_id": 5,
        "ans_desc": "The XSS attack is prevented by filtering and the page rendered"
      },
      {
        "ans_id": 6,
        "ans_desc": "The XSS attack is prevented by blocking the entire page"
      }
    ]
  },
  "30": {
    "testNumber": 30,
    "title": "Browser behavior for X-XSS-Protection with value '0'",
    "description": "How does the browser behave when the server sets the X-XSS-Protection header with the value '0' in case of a simple reflected XSS attack? Is the browser able to detect the attack and will the rendering of the entire page be blocked or only the reflected component?",
    "date_created": "03/12/2019",
    "tagNums": [
      18
    ],
    "path": "x-xss-protection-0",
    "question": "How does the browser behave if the server sets the X-XSS-Protection header to '0'?",
    "possibleAnswers": [
      {
        "ans_id": 1,
        "ans_desc": "The XSS is exploited, no XSS protection is active"
      },
      {
        "ans_id": 5,
        "ans_desc": "The XSS attack is prevented by filtering and the page rendered"
      },
      {
        "ans_id": 6,
        "ans_desc": "The XSS attack is prevented by blocking the entire page"
      }
    ]
  },
  "33": {
    "testNumber": 33,
    "title": "Cross-site scripting CSP Bypass using object data",
    "description": "Some versions of Firefox were vulnerable to a trivial CSP Bypass that might enable cross-site attacks. The idea of this testcase is to verify whether or not this technique can be applied to other browsers.",
    "date_created": "04/12/2019",
    "tagNums": [
      1,
      19
    ],
    "path": "csp-object-directive-for-xss-protection",
    "question": "Does the CSP protect from this attack?",
    "possibleAnswers": [
      {
        "ans_id": 1,
        "ans_desc": "Yes"
      },
      {
        "ans_id": 0,
        "ans_desc": "No"
      }
    ]
  },
  "31": {
    "testNumber": 31,
    "title": "Cookie with a specific path",
    "description": "Do browsers handle the \"path\" directive of cookies correctly?",
    "date_created": "05/12/2019",
    "tagNums": [
      2
    ],
    "path": "cookie-path-directive",
    "question": "Does the browser send cookies with a specfic path to diferrent paths?",
    "possibleAnswers": [
      {
        "ans_id": 1,
        "ans_desc": "No (expected behavior)"
      },
      {
        "ans_id": 0,
        "ans_desc": "Yes (incorrect behavior)"
      },
      {
        "ans_id": 9,
        "ans_desc": "Error during the execution"
      }
    ]
  },
  "34": {
    "testNumber": 34,
    "title": "How browsers treat CSP with an invalid Directive",
    "description": "What would happen if a Content-Security-Policy header contains an invalid directive (eg. due to a policy injection vulnerability)? Does the browser drop the whole CSP setting?",
    "date_created": "06/12/2019",
    "tagNums": [
      1,
      19
    ],
    "path": "csp-with-invalid-directives",
    "question": "Does the invalid directive break the whole CSP setting?",
    "possibleAnswers": [
      {
        "ans_id": 1,
        "ans_desc": "No, the browser just ignores the invalid directive."
      },
      {
        "ans_id": 0,
        "ans_desc": "Yes, the browser drops the whole CSP if it finds an invalid directive."
      },
      {
        "ans_id": 9,
        "ans_desc": "Error during the execution."
      }
    ]
  },
  "35": {
    "testNumber": 35,
    "title": "Which browsers perform MIME sniffing even if X-Content-Type-Options: nosniff is set?",
    "description": "MIME sniffing (or content sniffing) could lead to Cross-Site-Scripting (XSS). Therefore, the web server can add the X-Content-Type-Options: nosniff header to the responses. However, it seems not all browsers follow this directive.",
    "date_created": "06/01/2020",
    "tagNums": [
      20,
      21,
      22
    ],
    "path": "mime-sniffing",
    "question": "Did the browser perform MIME sniffing if `nosniff` is provided but no Content-Type?",
    "possibleAnswers": [
      {
        "ans_id": 1,
        "ans_desc": "No, the browser was not sniffing."
      },
      {
        "ans_id": 7,
        "ans_desc": "Yes, the browser sniffed the content, rendered the HTML and JavaScript was executed."
      }
    ]
  },
  "36": {
    "testNumber": 36,
    "title": "For which Content-Type header browser perform MIME sniffing?",
    "description": "MIME sniffing (or content sniffing) could lead to Cross-Site-Scripting (XSS). It is unclear when doing the browsers perform MIME sniffing. Here we test the behavior for different Content-Type headers in the response.",
    "date_created": "01/29/2020",
    "tagNums": [
      20,
      21,
      22
    ],
    "path": "mime-sniffing_content-type",
    "question": "For which Content-Type header browser perform MIME sniffing?",
    "possibleAnswers": [
      {
        "ans_id": 1,
        "ans_desc": "No sniffing, expected behavior"
      },
      {
        "ans_id": 0,
        "ans_desc": "Sniffing"
      },
      {
        "ans_id": 8,
        "ans_desc": "Error in test execution (browser)"
      }
    ],
    "variations": [
      {
        "description": "",
        "data": { "content_type": "application/octet-stream" },
        "id": 0,
        "title": "Content-Type: application/octet-stream"
      },
      {
        "description": "",
        "data": { "content_type": "text/css" },
        "id": 1,
        "title": "Content-Type: text/css"
      },
      {
        "description": "",
        "data": { "content_type": "image/gif" },
        "id": 2,
        "title": "Content-Type: image/gif"
      },
      {
        "description": "",
        "data": { "content_type": "image/jpeg" },
        "id": 3,
        "title": "Content-Type: image/jpeg"
      },
      {
        "description": "",
        "data": { "content_type": "text/javascript" },
        "id": 4,
        "title": "Content-Type: text/javascript"
      },
      {
        "description": "",
        "data": { "content_type": "audio/wav" },
        "id": 5,
        "title": "Content-Type: audio/wav"
      },
      {
        "description": "",
        "data": { "content_type": "video/webm" },
        "id": 6,
        "title": "Content-Type: video/webm"
      },
      {
        "description": "",
        "data": { "content_type": "font/woff" },
        "id": 7,
        "title": "Content-Type: font/woff"
      },
      {
        "description": "",
        "data": { "content_type": "text/xml" },
        "id": 8,
        "title": "Content-Type: text/xml"
      },
      {
        "description": "",
        "data": { "content_type": "application/zip" },
        "id": 9,
        "title": "Content-Type: application/zip"
      },
      {
        "description": "",
        "data": { "content_type": "aaa" },
        "id": 10,
        "title": "Content-Type: aaa"
      },
      {
        "description": "",
        "data": { "content_type": "some/thing" },
        "id": 11,
        "title": "Content-Type: some/thing"
      }
    ],
    "variationOverview": "For which Content-Type the browser still sniffs the content?"
  },
  "38": {
    "testNumber": 38,
    "title": "Accessibility of the opener object when using target=\"_blank\"",
    "description": "How long does an opener object remain and therefore enables Reverse Tabnabbing?",
    "date_created": "08/18/2020",
    "tagNums": [
      23
    ],
    "path": "reverse-tabnabbing-opener-remain",
    "question": "The user clicks on a link vulnerable to Reverse Tabnabbing. Is there an `opener` object created and at which user actions does it remain?",
    "possibleAnswers": [
      {
        "ans_id": 1,
        "ans_desc": "No `opener` object created at all."
      },
      {
        "ans_id": 6,
        "ans_desc": "The `opener` object exists at the website opened with the vulnerable link."
      },
      {
        "ans_id": 7,
        "ans_desc": "The `opener` object remains after clicking another link in the target tab."
      },
      {
        "ans_id": 0,
        "ans_desc": "The `opener` object remains after the user enters a new URL."
      }
    ]
  },
  "39": {
    "testNumber": 39,
    "title": "Browser returns secret out of pre-cached response in a CORS-Request",
    "description": "If a browser does not retrieve a Cache-Control-Header after an authenticated request against an API, which subsequently serves a secret content, does the browser serves the cached secret content if a foreign website queries the same API again without authenticating again? Does this work even Cross-Domain? This should not be the case as it would open a whole new attack surface for phishing attacks.",
    "date_created": "09/03/2020",
    "tagNums": [
      5,
      24
    ],
    "path": "sop-and-the-browser-cache",
    "question": "Is the secret available for other domains?",
    "possibleAnswers": [
      {
        "ans_id": 1,
        "ans_desc": "No (the browser is not exploitable with this attack scenario)"
      },
      {
        "ans_id": 0,
        "ans_desc": "Yes (a remote attack is possible)"
      },
      {
        "ans_id": 9,
        "ans_desc": "Error during the execution (possibly due to the \"fetch\" command not being supported by the browser)"
      }
    ],
    "variations": [
      {
        "description": "Authentication to the API using cookies",
        "data": {
          "authentication": "cookie",
          "apiOrigin": "same-origin"
        },
        "id": 0,
        "title": "Cookie"
      },
			{
				"description": "Authentication to the API using basic authentication. This method uses the Authorization-Header instead of the Cookie-Header",
				"data": {
					"authentication": "basic",
					"apiOrigin": "same-origin"
				},
				"id": 8,
				"title": "Basic authentication"
			},
      {
        "description": "Authentication to the API using a JWT. Like Basic-Auth, this method uses the Authorization-Header. However, it is not added automatically.",
        "data": {
          "authentication": "jwt",
          "apiOrigin": "cross-origin"
        },
        "id": 4,
        "title": "JSON Web Token (JWT)"
      },
      {
        "description": "Authentication to the API using a custom header, e.g. X-Auth-Token. Note, that it is impossible to mitigate this testcase because this clearly indicates a programming error: the website has to issue a Vary-Header including the X-Auth-Token-Header",
        "data": {
          "authentication": "custom",
          "apiOrigin": "cross-origin"
        },
        "id": 7,
        "title": "Custom authentication header"
      }
    ],
    "variationOverview": "Testcase variations: effects of authentication methods and API origin on the exploitability"
  },
  "32": {
    "testNumber": 32,
    "title": "SameSite cookies",
    "description": "Support for SameSite cookies or do browsers handle the \"SameSite\" directive correctly?",
    "date_created": "06/11/2019",
    "tagNums": [
      2
    ],
    "path": "browsers-samesite-cookies",
    "question": "Does the browser send cookies with SameSite attribute set to strict on cross-site requests?",
    "possibleAnswers": [
      {
        "ans_id": 1,
        "ans_desc": "No (expected behavior)."
      },
      {
        "ans_id": 0,
        "ans_desc": "Yes (either \"SameSite\" is not supported or this is an incorrect behavior)."
      },
      {
        "ans_id": 9,
        "ans_desc": "Error during the execution"
      }
    ]
  },
  "66": {
    "testNumber": 66,
    "title": "JavaScript in SVG loaded in IMG tag",
    "description": "SVG images can contain JavaScript code which would be executed in the user's browser if this SVG is loaded in a web site. This becomes dangerous if the JavaScript code can access and change the DOM of the web site loading it. This test case uses a web site which loads an SVG in an IMG tag where the SVG is hosted on the same host. This SVG contains JS code that attempts to change the loading web site.",
    "date_created": "06/26/2019",
    "tagNums": [
      9
    ],
    "path": "JS-in-SVG-loaded-by-img",
    "question": "Can the JavaScript code inside the SVG change the web site's content?",
    "possibleAnswers": [
      {
        "ans_id": 1,
        "ans_desc": "No"
      },
      {
        "ans_id": 0,
        "ans_desc": "Yes"
      },
      {
        "ans_id": 9,
        "ans_desc": "Error during the execution"
      }
    ]
  },
  "67": {
    "testNumber": 67,
    "title": "JavaScript in SVG loaded in OBJECT tag",
    "description": "SVG images can contain JavaScript code which would be executed in the user's browser if this SVG is loaded in a web site. This becomes dangerous if the JavaScript code can access and change the DOM of the web site loading it. This test case uses a web site which loads an SVG in an OBJECT tag where the SVG is hosted on the same host. This SVG contains JS code that attempts to change the loading web site.",
    "date_created": "12/05/2019",
    "tagNums": [
      9
    ],
    "path": "JS-in-SVG-loaded-by-object",
    "question": "Can the JavaScript code inside the SVG change the web site's content?",
    "possibleAnswers": [
      {
        "ans_id": 0,
        "ans_desc": "No"
      },
      {
        "ans_id": 1,
        "ans_desc": "Yes"
      },
      {
        "ans_id": 9,
        "ans_desc": "Error during the execution"
      }
    ]
  },
  "68": {
    "testNumber": 68,
    "title": "JavaScript in SVG loaded in EMBED tag",
    "description": "SVG images can contain JavaScript code which would be executed in the user's browser if this SVG is loaded in a web site. This becomes dangerous if the JavaScript code can access and change the DOM of the web site loading it. This test case uses a web site which loads an SVG in an EMBED tag where the SVG is hosted on the same host. This SVG contains JS code that attempts to change the loading web site.",
    "date_created": "12/05/2019",
    "tagNums": [
      9
    ],
    "path": "JS-in-SVG-loaded-by-embed",
    "question": "Can the JavaScript code inside the SVG change the web site's content?",
    "possibleAnswers": [
      {
        "ans_id": 0,
        "ans_desc": "No"
      },
      {
        "ans_id": 1,
        "ans_desc": "Yes"
      },
      {
        "ans_id": 9,
        "ans_desc": "Error during the execution"
      }
    ]
  },
  "72": {
    "testNumber": 72,
    "title": "Contradicting HSTS Headers",
    "description": "Which Policy is enforced, if the server sends two contradicting Strict-Transport-Security (HSTS) headers? Alway the first or the last header set by the server? Or is the result dependant on the max-age value of the header?",
    "date_created": "07/03/2019",
    "tagNums": [
      4,
      7
    ],
    "path": "contradicting-HSTS-headers",
    "question": "Which HSTS header is used?",
    "possibleAnswers": [
      {
        "ans_id": 3,
        "ans_desc": "Always the last header"
      },
      {
        "ans_id": 4,
        "ans_desc": "Always the first header"
      },
      {
        "ans_id": 2,
        "ans_desc": "Always the header with the longest max-age value"
      },
      {
        "ans_id": 5,
        "ans_desc": "Always the header with the shortest max-age value"
      },
      {
        "ans_id": 9,
        "ans_desc": "Error in test execution"
      }
    ]
  },
  "99": {
    "testNumber": 99,
    "title": "Content-Type values allowing for script execution with nosniff enabled",
    "description": "When the server sends the response header \"X-Content-Type-Options: nosniff\" together with \"Content-Type: application/json\" or \"Content-Type: text/json\", will the browser treat  the response body as a script?",
    "date_created": "12/28/2019",
    "tagNums": [
      20,
      21,
      22
    ],
    "path": "nosniff-content-type-script-execution",
    "question": "Which Content-Types are considered valid for script execution?",
    "possibleAnswers": [
      {
        "ans_id": 0,
        "ans_desc": "No scripts executed"
      },
      {
        "ans_id": 1,
        "ans_desc": "text/javascript"
      },
      {
        "ans_id": 2,
        "ans_desc": "application/json"
      },
      {
        "ans_id": 3,
        "ans_desc": "text/javascript, application/json"
      },
      {
        "ans_id": 4,
        "ans_desc": "text/json"
      },
      {
        "ans_id": 5,
        "ans_desc": "text/javascript, text/json"
      },
      {
        "ans_id": 6,
        "ans_desc": "application/json, text/json"
      },
      {
        "ans_id": 7,
        "ans_desc": "text/javascript, application/json, text/json"
      },
      {
        "ans_id": 8,
        "ans_desc": "Error in test execution (browser)"
      },
      {
        "ans_id": 9,
        "ans_desc": "Error in test execution (framework)"
      }
    ]
  },
  "37": {
    "testNumber": 37,
    "title": "Contradicting CSP in header and meta tag",
    "description": "Which Content Security Policy is enforced if there are two contradict declaration in both header and meta tag?",
    "date_created": "03/09/2020",
    "tagNums": [
      1
    ],
    "path": "contradict-csp-in-header-and-meta-tag",
    "question": "Which declaration will wins?",
    "possibleAnswers": [
      {
        "ans_id": 2,
        "ans_desc": "Stricter declaration wins"
      },
      {
        "ans_id": 3,
        "ans_desc": "Meta wins"
      },
      {
        "ans_id": 4,
        "ans_desc": "Header wins"
      },
      {
        "ans_id": 5,
        "ans_desc": "Looser declaration wins"
      }
    ]
  }
}
